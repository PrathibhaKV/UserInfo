Screen1 As screen:
    Fill: =Color.White
    LoadingSpinnerColor: =App.Theme.Colors.Primary

    HeadingContainer As groupContainer.manualLayoutContainer:
        DropShadow: =DropShadow.Light
        Height: =105
        RadiusBottomLeft: =4
        RadiusBottomRight: =4
        RadiusTopLeft: =4
        RadiusTopRight: =4
        Width: =1359
        X: =4
        Y: =4
        ZIndex: =1

        txtlabel As label:
            Align: =Align.Center
            BorderColor: =App.Theme.Colors.Darker40
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =App.Theme.Font
            FontWeight: =FontWeight.Bold
            Height: =91
            Size: =20
            Text: ="User Submitting Form"
            Width: =1346
            ZIndex: =1

    FormContainer As groupContainer.manualLayoutContainer:
        DropShadow: =DropShadow.Light
        Height: =642
        RadiusBottomLeft: =4
        RadiusBottomRight: =4
        RadiusTopLeft: =4
        RadiusTopRight: =4
        Width: =1359
        X: =4
        Y: =126
        ZIndex: =2

        UserForm As form.PowerApps_CoreControls_Form:
            BorderColor: =App.Theme.Colors.Darker40
            DataSource: ='User Information'
            DefaultMode: =FormMode.New
            Height: =619
            NumberOfColumns: =1
            UseFluentV9Cards: =true
            Width: =1353
            Y: =23
            ZIndex: =1

            Title_DataCard1 As typedDataCard.fluentV9TextualEditCard:
                BorderColor: =App.Theme.Colors.Darker40
                BorderStyle: =BorderStyle.Solid
                DataField: ="Title"
                Default: =ThisItem.Title
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@'User Information'],DataSourceInfo.DisplayName,Title)
                Fill: =RGBA(0, 0, 0, 0)
                Height: =70
                MaxLength: =DataSourceInfo([@'User Information'], DataSourceInfo.MaxLength, Title)
                Required: =false
                Update: =DataCardValue1.Value
                Width: =1353
                X: =0
                Y: =0
                ZIndex: =2

                DataCardKey1 As Text:
                    BorderColor: =
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    FontColor: =
                    Height: =22
                    Text: ="User Name"
                    Weight: ='TextCanvas.Weight'.Semibold
                    Width: =Parent.Width - 48
                    Wrap: =false
                    X: =24
                    Y: =10
                    ZIndex: =1

                "DataCardValue1 As 'Text input'":
                    AccessibleLabel: =Parent.DisplayName
                    BasePaletteColor: =
                    BorderColor: =
                    DisplayMode: =Parent.DisplayMode
                    Fill: =
                    FontColor: =
                    Height: =32
                    Mode: ="'TextInputCanvas.Mode'.TextInputModeSingleLine"
                    Required: =Parent.Required
                    ValidationState: =If(And(Not(localNameValidation),localformvalidation),"Error","None")
                    Value: =Parent.Default
                    Width: =Parent.Width - 48
                    X: =24
                    Y: =DataCardKey1.Y + DataCardKey1.Height + 4
                    ZIndex: =2

                ErrorMessage1 As Text:
                    BorderColor: =
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    FontColor: =Color.Red
                    Height: =30
                    Text: =If(DataCardValue1.ValidationState="Error","Name can not be empty")
                    Visible: =If(DataCardValue1.ValidationState="Error",true,false)
                    Width: =Parent.Width - 48
                    Wrap: =true
                    X: =24
                    Y: =DataCardValue1.Y + DataCardValue1.Height
                    ZIndex: =3

                StarVisible1 As Text:
                    Align: ='TextCanvas.Align'.Center
                    BorderColor: =
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    FontColor: =
                    Height: =30
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    X: =0
                    Y: =DataCardKey1.Y
                    ZIndex: =4

            "'User Type_DataCard1' As typedDataCard.fluentV9ComboBoxEditCard":
                BorderColor: =App.Theme.Colors.Darker40
                BorderStyle: =BorderStyle.Solid
                DataField: ="UserType"
                Default: =ThisItem.'User Type'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@'User Information'],DataSourceInfo.DisplayName,UserType)
                Fill: =RGBA(0, 0, 0, 0)
                Height: =70
                Required: =false
                Update: =DataCardValue2.Selected
                Width: =1353
                X: =0
                Y: =1
                ZIndex: =2

                DataCardKey2 As Text:
                    BorderColor: =
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    FontColor: =
                    Height: =22
                    Text: =Parent.DisplayName
                    Weight: ='TextCanvas.Weight'.Semibold
                    Width: =Parent.Width - 48
                    Wrap: =false
                    X: =24
                    Y: =10
                    ZIndex: =1

                DataCardValue2 As Combobox.pcfdataset:
                    AccessibleLabel: =If(Parent.Required, Substitute("{0}. Required.", "{0}", Parent.DisplayName), Parent.DisplayName)
                    DefaultSelectedItems: =[Parent.Default]
                    DisplayMode: =Parent.DisplayMode
                    Height: =32
                    Items: =Choices([@'User Information'].UserType)
                    ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                    Width: =Parent.Width - 48
                    X: =24
                    Y: =DataCardKey2.Y + DataCardKey2.Height + 4
                    ZIndex: =2

                ErrorMessage2 As Text:
                    BorderColor: =
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    FontColor: =
                    Height: =30
                    Text: =Parent.Error
                    Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                    Width: =Parent.Width - 48
                    Wrap: =true
                    X: =24
                    Y: =DataCardValue2.Y + DataCardValue2.Height
                    ZIndex: =3

                StarVisible2 As Text:
                    Align: ='TextCanvas.Align'.Center
                    BorderColor: =
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    FontColor: =
                    Height: =20
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    X: =0
                    Y: =DataCardKey2.Y
                    ZIndex: =4

            "'User Starting Date_DataCard1' As typedDataCard.fluentV9DateEditCard":
                BorderColor: =App.Theme.Colors.Darker40
                BorderStyle: =BorderStyle.Solid
                DataField: ="UserStartingDate"
                Default: =ThisItem.'User Starting Date'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@'User Information'],DataSourceInfo.DisplayName,UserStartingDate)
                Fill: =RGBA(0, 0, 0, 0)
                Height: =70
                Required: =false
                Update: =DataCardValue3.SelectedDate
                Width: =1353
                X: =0
                Y: =2
                ZIndex: =2

                DataCardKey3 As Text:
                    BorderColor: =
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    FontColor: =
                    Height: =22
                    Text: =Parent.DisplayName
                    Weight: ='TextCanvas.Weight'.Semibold
                    Width: =Parent.Width - 48
                    Wrap: =false
                    X: =24
                    Y: =10
                    ZIndex: =1

                "DataCardValue3 As 'Date picker'":
                    AccessibleLabel: =If(Parent.Required, Substitute("{0}. Required.", "{0}", Parent.DisplayName), Parent.DisplayName)
                    BasePaletteColor: =
                    BorderColor: =
                    DisplayMode: =Parent.DisplayMode
                    EndDate: =Date(Year(Today())+100, 12, 31)
                    Fill: =
                    FontColor: =
                    Height: =32
                    SelectedDate: =Parent.Default
                    StartDate: =Date(1900, 1, 1)
                    ValidationState: =If(And(Not(localDateValidation),localformvalidation),"Error","None")
                    Width: =Parent.Width - 48
                    X: =24
                    Y: =DataCardKey3.Y + DataCardKey3.Height + 4
                    ZIndex: =2

                ErrorMessage3 As Text:
                    BorderColor: =
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    FontColor: =Color.Red
                    Height: =30
                    Text: =If(DataCardValue3.ValidationState="Error","Starting Date should be today or future dates")
                    Visible: =If(DataCardValue3.ValidationState="Error",true,false)
                    Width: =Parent.Width - 48
                    Wrap: =true
                    X: =24
                    Y: =DataCardValue3.Y + DataCardValue3.Height
                    ZIndex: =3

                StarVisible3 As Text:
                    Align: ='TextCanvas.Align'.Center
                    BorderColor: =
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    FontColor: =
                    Height: =30
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    X: =0
                    Y: =DataCardKey3.Y
                    ZIndex: =4

            "'User Allowance_DataCard1' As typedDataCard.fluentV9NumberEditCard":
                BorderColor: =App.Theme.Colors.Darker40
                BorderStyle: =BorderStyle.Solid
                DataField: ="UserAllowance"
                Default: =ThisItem.'User Allowance'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@'User Information'],DataSourceInfo.DisplayName,UserAllowance)
                Fill: =RGBA(0, 0, 0, 0)
                Height: =70
                Required: =false
                Update: =Value(DataCardValue4.Value)
                Width: =1353
                X: =0
                Y: =3
                ZIndex: =2

                DataCardKey4 As Text:
                    BorderColor: =
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    FontColor: =
                    Height: =22
                    Text: =Parent.DisplayName
                    Weight: ='TextCanvas.Weight'.Semibold
                    Width: =Parent.Width - 48
                    Wrap: =false
                    X: =24
                    Y: =10
                    ZIndex: =1

                "DataCardValue4 As 'Text input'":
                    AccessibleLabel: =If(Parent.Required, Substitute("{0}. Required.", "{0}", Parent.DisplayName), Parent.DisplayName)
                    BasePaletteColor: =
                    BorderColor: =
                    DisplayMode: =Parent.DisplayMode
                    Fill: =
                    FontColor: =
                    Height: =32
                    ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                    Value: =Parent.Default
                    Width: =Parent.Width - 48
                    X: =24
                    Y: =DataCardKey4.Y + DataCardKey4.Height + 4
                    ZIndex: =2

                ErrorMessage4 As Text:
                    BorderColor: =
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    FontColor: =Color.Red
                    Height: =30
                    Text: =If(DataCardValue3.ValidationState="Error",true,false)
                    Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                    Width: =Parent.Width - 48
                    Wrap: =true
                    X: =24
                    Y: =DataCardValue4.Y + DataCardValue4.Height
                    ZIndex: =3

                StarVisible4 As Text:
                    Align: ='TextCanvas.Align'.Center
                    BorderColor: =
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    FontColor: =
                    Height: =30
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    X: =0
                    Y: =DataCardKey4.Y
                    ZIndex: =4

    ButtonCanvas1 As Button:
        BasePaletteColor: =
        BorderColor: =
        DisplayMode: =DisplayMode.Edit
        FontColor: =
        Height: =32
        OnSelect: |
            =//this will check the validation is working
            UpdateContext({localformvalidation:true});
            //Name Validation
            UpdateContext({localNameValidation:!IsBlank(DataCardValue1.Value)});
            //Date Validation
            UpdateContext({localDateValidation:DataCardValue3.SelectedDate>=Today()})
        Text: ="Save"
        Width: =96
        X: =635
        Y: =661
        ZIndex: =3

